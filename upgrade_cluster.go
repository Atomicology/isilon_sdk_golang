/*
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * API version: 5
 * Contact: sdk@isilon.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package isi_sdk_8_1_0

// Cluster wide upgrade status info.
type UpgradeCluster struct {

	// The cluster overview of an upgrade process.
	ClusterOverview *UpgradeClusterClusterOverview `json:"cluster_overview,omitempty"`

	// The different states of an upgrade, rollback, or assessment. One of the following values: 'committed', 'upgraded', 'partially upgraded', 'upgrading', 'rolling back', 'assessing', 'error'
	ClusterState string `json:"cluster_state,omitempty"`

	// The current upgrade activity.
	CurrentProcess string `json:"current_process,omitempty"`

	// The time when a rollback, assessment or upgrade has finished completely. Use ISO 8601 standard. Null if the cluster_state is not 'upgraded'.
	FinishTime string `json:"finish_time,omitempty"`

	// The location (path) of the upgrade image which must be within /ifs. Null if the cluster_state is 'committed' or 'upgraded.'
	InstallImagePath string `json:"install_image_path,omitempty"`

	// The median time (seconds) to complete each node so far during this upgrade. Before the first node in an upgrade has completed this key will have an associated null value.
	NodeMedianTime int32 `json:"node_median_time,omitempty"`

	// The current OneFS version before upgrade.
	OnefsVersionCurrent *ClusterNodesOnefsVersion `json:"onefs_version_current,omitempty"`

	// The OneFS version the user is attempting to upgrade to. Null if the cluster_state is 'committed' or 'assessing.'
	OnefsVersionUpgrade *ClusterNodesOnefsVersion `json:"onefs_version_upgrade,omitempty"`

	// The most recent patch action performed.
	PatchAction string `json:"patch_action,omitempty"`

	// The patch with the most recent patch action.
	PatchName string `json:"patch_name,omitempty"`

	// The time when an upgrade, rollback, or assessment was started. Use ISO 8601 standard. Null if the cluster_state is 'committed' or 'partially upgraded.'
	StartTime string `json:"start_time,omitempty"`

	// True if upgrade is committed.
	UpgradeIsCommitted bool `json:"upgrade_is_committed,omitempty"`

	// The settings necessary when starting an upgrade. Null if the cluster_state is not 'upgrading' or 'partially upgraded.' or 'error'.
	UpgradeSettings *UpgradeClusterUpgradeSettings `json:"upgrade_settings,omitempty"`

	// Time at which upgrade was originally requested.
	UpgradeTriggeredTime string `json:"upgrade_triggered_time,omitempty"`
}
