/*
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * API version: 5
 * Contact: sdk@isilon.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package isi_sdk_8_1_0

type CertificateServerCertificate struct {

	// Boolean identifying if a certificate is the default certificate.The default certificate is used as the fallback when no other certificates match a TLS enabled service's particular criteria. There must always be a configured default certificate.
	Default_ bool `json:"default"`

	// Description field associated with a certificate provided for administrative convenience.
	Description string `json:"description"`

	// A list of DNS names/patterns for which this certificate is valid. This list is extracted from the certificates CN (Common Name) and subjectAtlName extension fields.
	Dnsnames []string `json:"dnsnames"`

	// True if the certificate has expired and is no longer valid.
	Expired bool `json:"expired"`

	// A list of zero or more certificate fingerprints which can be used for certificate identification.
	Fingerprints []CertificateServerCertificateFingerprint `json:"fingerprints"`

	// Unique server certificate identifier.
	Id string `json:"id"`

	// Certificate issuer field extracted from the certificate.
	Issuer string `json:"issuer"`

	// Subject common name extracted from the certificate.
	Name string `json:"name"`

	// Certificate notAfter field extracted from the certificate encoded as a UNIX epoch timestamp.  The certificate is not valid after this timestamp.
	NotAfter int32 `json:"not_after"`

	// Certificate notBefore field extracted from the certificate encoded as a UNIX epoch timestamp.  The certificate is not valid before this timestamp.
	NotBefore int32 `json:"not_before"`

	// Certificate subject field extracted from the certificate.
	Subject string `json:"subject"`

	// True if the certificate is valid (ie: not_before <= now <= not_after).
	Valid bool `json:"valid"`
}
