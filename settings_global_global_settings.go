/*
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * API version: 5
 * Contact: sdk@isilon.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package isi_sdk_8_1_0

type SettingsGlobalGlobalSettings struct {

	// Specifies the number of times to retry an ID allocation before failing.
	AllocRetries int32 `json:"alloc_retries,omitempty"`

	// If true, allocates GIDs from a fixed range.
	GidRangeEnabled bool `json:"gid_range_enabled,omitempty"`

	// Specifies the ending number for a fixed range from which GIDs are allocated.
	GidRangeMax int32 `json:"gid_range_max,omitempty"`

	// Specifies the starting number for a fixed range from which GIDs are allocated.
	GidRangeMin int32 `json:"gid_range_min,omitempty"`

	// Specifies the next GID to allocate.
	GidRangeNext int32 `json:"gid_range_next,omitempty"`

	// Specifies the user iD for a group when requested by the kernel.
	GroupUid int32 `json:"group_uid,omitempty"`

	// Specifies which providers are loaded by the authentication daemon (lsassd).
	LoadProviders []string `json:"load_providers,omitempty"`

	// Starts the RID in the local domain to map a UID and a GID.
	MinMappedRid int32 `json:"min_mapped_rid,omitempty"`

	// Specifies an alternative GID when the kernel is unable to retrieve a GID for a persona.
	NullGid int32 `json:"null_gid,omitempty"`

	// Specifies an alternative UID when the kernel is unable to retrieve a UID for a persona.
	NullUid int32 `json:"null_uid,omitempty"`

	// Specifies the type of identity that is stored on disk.
	OnDiskIdentity string `json:"on_disk_identity,omitempty"`

	// Specifies the minimum amount of time in milliseconds to wait before performing an oprestart.
	RpcBlockTime int32 `json:"rpc_block_time,omitempty"`

	// Specifies the maximum number of outstanding RPC requests.
	RpcMaxRequests int32 `json:"rpc_max_requests,omitempty"`

	// Specifies the maximum amount of time in seconds to wait for an idmap response.
	RpcTimeout int32 `json:"rpc_timeout,omitempty"`

	// If true, sends NTLMv2 responses.
	SendNtlmv2 bool `json:"send_ntlmv2,omitempty"`

	// Specifies the space replacement character.
	SpaceReplacement string `json:"space_replacement,omitempty"`

	// Specifies the minimum GID to attempt to look up in the idmap database.
	SystemGidThreshold int32 `json:"system_gid_threshold,omitempty"`

	// Specifies the minimum UID to attempt to look up in the idmap database.
	SystemUidThreshold int32 `json:"system_uid_threshold,omitempty"`

	// If true, allocates UIDs from a fixed range.
	UidRangeEnabled bool `json:"uid_range_enabled,omitempty"`

	// Specifies the ending number for a fixed range from which UIDs are allocated.
	UidRangeMax int32 `json:"uid_range_max,omitempty"`

	// Specifies the starting number for a fixed range from which UIDs are allocated.
	UidRangeMin int32 `json:"uid_range_min,omitempty"`

	// Specifies the next UID to allocate.
	UidRangeNext int32 `json:"uid_range_next,omitempty"`

	// Specifies the GID for the unknown (anonymous) group.
	UnknownGid int32 `json:"unknown_gid,omitempty"`

	// Specifies the UID for the unknown (anonymous) user.
	UnknownUid int32 `json:"unknown_uid,omitempty"`

	// Specifies the maximum size (in bytes) of the security object cache in the authentication daemon.
	UserObjectCacheSize int32 `json:"user_object_cache_size,omitempty"`

	// Specifies the NetBIOS workgroup or domain.
	Workgroup string `json:"workgroup,omitempty"`
}
